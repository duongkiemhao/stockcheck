// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.siliconstack.stockcheck.viewmodel;

import com.siliconstack.stockcheck.AppApplication;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final MembersInjector<MainViewModel> mainViewModelMembersInjector;

  private final Provider<AppApplication> applicationProvider;

  public MainViewModel_Factory(
      MembersInjector<MainViewModel> mainViewModelMembersInjector,
      Provider<AppApplication> applicationProvider) {
    assert mainViewModelMembersInjector != null;
    this.mainViewModelMembersInjector = mainViewModelMembersInjector;
    assert applicationProvider != null;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public MainViewModel get() {
    return MembersInjectors.injectMembers(
        mainViewModelMembersInjector, new MainViewModel(applicationProvider.get()));
  }

  public static Factory<MainViewModel> create(
      MembersInjector<MainViewModel> mainViewModelMembersInjector,
      Provider<AppApplication> applicationProvider) {
    return new MainViewModel_Factory(mainViewModelMembersInjector, applicationProvider);
  }
}
