apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.siliconstack.stockcheck"
        minSdkVersion 24
        targetSdkVersion 27
        versionCode 1
        versionName "1.0.2"
        multiDexEnabled true
        manifestPlaceholders = [HOCKEYAPP_APP_ID: "48d36a0a45fc4393bf1b3ba6d91a609e",applicationIdWithSuffix: "${applicationId}" ]

    }
    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword '12345678'
            storeFile file('/Users/si01/Documents/workspace/Android/Loancar/keystore')
            storePassword '12345678'
        }
    }

    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVER_OCR_URL", '"https://ocr.siliconstack.com.au/"'
            buildConfigField "String", "SERVER_TELESERVICE_URL", '"http://13.210.63.37:8090/Teleservice/api/"'
            //buildConfigField "String", "SERVER_OCR_URL", '"http://192.168.1.63/ocr/"'

        }


    }
    dataBinding {
        enabled = true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res-main',
                    'src/main/res-screen/login',
            ]
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def project = "StockCheck"
            def date = new Date();
            def formattedDate = date.format('ddMMyy')
            //def isSigned=variant.variantData.isSigned()?"signed":"unsigned"
            outputFileName = "${project}-${variant.name}-${variant.versionName}-${formattedDate}.apk"

        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    compile 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

    //arc
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
    implementation 'android.arch.lifecycle:runtime:1.1.1'

    //multidex
    implementation 'com.android.support:multidex:1.0.3'

    //retrofit
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation 'com.github.GrenderG:Toasty:1.3.0'

    //Room
    implementation 'android.arch.persistence.room:runtime:1.1.1'
    kapt "android.arch.persistence.room:compiler:1.1.1"
    implementation 'android.arch.paging:runtime:1.0.0'

    //Dagger
    def daggerVersion = '2.11'
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //anko
    def anko_version = "0.10.3"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"

    //toast
    implementation 'com.github.GrenderG:Toasty:1.3.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'

    //ripple effect
    compile 'com.balysv:material-ripple:1.0.2'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'

    //lottie animation
    compile 'com.airbnb.android:lottie:2.5.1'

    //Preference
    compile 'com.marcinmoskala.PreferenceHolder:preferenceholder:1.51'
    compile 'com.marcinmoskala.PreferenceHolder:preferenceholder-gson-serializer:1.51'
    compile 'com.chibatching.kotpref:kotpref:2.5.0'

    //database, preference debug
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'

    //event bus
    compile 'org.greenrobot:eventbus:3.1.1'

    //runtime permission
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    //fabric
    compile('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }

    //ota testing
    compile 'net.hockeyapp.android:HockeySDK:5.1.0'

    //logger
    implementation 'com.orhanobut:logger:2.2.0'

    //parcel
    compile 'org.parceler:parceler-api:1.1.11'
    kapt 'org.parceler:parceler:1.1.11'

    //Java joda time
    implementation 'net.danlew:android.joda:2.9.9.4'

    //play service
    implementation 'com.google.firebase:firebase-ml-vision:17.0.0'
    compile 'com.google.firebase:firebase-core:16.0.3'
    compile 'com.google.api-client:google-api-client-android:1.22.0'
    compile 'com.google.apis:google-api-services-vision:v1-rev357-1.22.0'

    //camera
    compile 'com.otaliastudios:cameraview:1.5.1'

    //swipe
    compile 'com.daimajia.swipelayout:library:1.2.0@aar'

    //QR and BARCODE scanner
    compile 'me.dm7.barcodescanner:zxing:1.9'


    //    compile 'com.brandongogetap:stickyheaders:0.5.1'
    compile 'com.thoughtbot:expandablerecyclerview:1.3'
    compile('com.github.ganfra:material-spinner:2.0.0') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    compile 'com.google.android.gms:play-services-maps:16.0.0'
    implementation "com.google.android.gms:play-services-location:16.0.0"
    compile 'com.daimajia.numberprogressbar:library:1.4@aar'
    api 'com.theartofdev.edmodo:android-image-cropper:2.7.+'




}
//apply plugin: 'com.google.gms.google-services'



kapt {
    generateStubs = true
}

